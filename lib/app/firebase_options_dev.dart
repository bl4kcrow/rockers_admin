// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

import 'package:rockers_admin/app/core/constants/environment.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options_dev.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static final Environment _environment = Environment.dev();
  
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: _environment.firebaseApiKey,
    appId: _environment.firebaseAppIdWeb,
    messagingSenderId: '343350323537',
    projectId: 'rockers-db-dev',
    authDomain: 'rockers-db-dev.firebaseapp.com',
    storageBucket: 'rockers-db-dev.firebasestorage.app',
    measurementId: 'G-0DY927BRYK',
  );

  static FirebaseOptions windows = FirebaseOptions(
    apiKey: _environment.firebaseApiKey,
    appId: _environment.firebaseAppIdWin,
    messagingSenderId: '343350323537',
    projectId: 'rockers-db-dev',
    authDomain: 'rockers-db-dev.firebaseapp.com',
    storageBucket: 'rockers-db-dev.firebasestorage.app',
    measurementId: 'G-XVL9TSTBDK',
  );
}
